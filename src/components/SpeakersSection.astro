---
import { getCollection } from 'astro:content';
import { getLangFromUrl, useTranslations } from '../i18n/utils';

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

let speakers = [];
let sortedSpeakers = [];

try {
  speakers = await getCollection('speakers');
  // Mostrar TODOS los speakers en la home
  sortedSpeakers = speakers.sort((a, b) => a.data.id - b.data.id);
} catch (error) {
  console.error('Error loading speakers:', error);
  speakers = [];
  sortedSpeakers = [];
}
---

<section id="speakers" class="py-16 bg-white">
  <div class="container mx-auto px-4">
    <!-- Header -->
    <div class="text-center mb-12">
      <span class="section-tag">{t('speakers.tag')}</span>
      <h2 class="section-title">{t('speakers.title')}</h2>
      <p class="section-subtitle">{t('speakers.subtitle')}</p>
    </div>

    {sortedSpeakers.length > 0 ? (
      <>
        <!-- Speakers Grid -->
        <div class="bento-grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 mb-10">
          {sortedSpeakers.map((speaker) => (
            <div class="bento-card group hover:shadow-lg transition-all duration-300 transform hover:-translate-y-1">
              <a href={`/${lang}/speakers/${speaker.slug}`} class="block">
                <!-- Imagen de perfil -->
                <div class="relative mb-4">
                  <div class="aspect-w-16 aspect-h-9 bg-gradient-to-br from-primary-500 to-blue-600 rounded-xl overflow-hidden">
                    {speaker.data.profileImage ? (
                      <img 
                        src={`/images/speakers/${speaker.data.profileImage}`} 
                        alt={speaker.data.name}
                        class="w-full h-32 object-cover"
                        transition:name={`speaker-${speaker.data.id}`}
                      />
                    ) : (
                      <div class="w-full h-32 flex items-center justify-center">
                        <div class="w-12 h-12 bg-white/20 rounded-full flex items-center justify-center">
                          <svg class="w-6 h-6 text-white" fill="currentColor" viewBox="0 0 24 24">
                            <path d="M12 12c2.21 0 4-1.79 4-4s-1.79-4-4-4-4 1.79-4 4 1.79 4 4 4zm0 2c-2.67 0-8 1.34-8 4v2h16v-2c0-2.66-5.33-4-8-4z"/>
                          </svg>
                        </div>
                      </div>
                    )}
                  </div>
                  
                  <!-- Badge de ubicación -->
                  <div class="absolute top-2 right-2">
                    <span class="bg-white/90 text-gray-800 text-xs px-2 py-1 rounded-full font-medium flex items-center gap-1">
                      <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 24 24">
                        <path d="M12 2C8.13 2 5 5.13 5 9c0 5.25 7 13 7 13s7-7.75 7-13c0-3.87-3.13-7-7-7zm0 9.5c-1.38 0-2.5-1.12-2.5-2.5s1.12-2.5 2.5-2.5 2.5 1.12 2.5 2.5-1.12 2.5-2.5 2.5z"/>
                      </svg>
                      {speaker.data.location}
                    </span>
                  </div>
                </div>
                
                <!-- Información del speaker -->
                <div>
                  <h3 class="text-lg font-bold text-gray-900 mb-1 group-hover:text-primary-600 transition-colors">
                    {speaker.data.name}
                  </h3>
                  <p class="text-primary-600 font-semibold text-sm mb-2">
                    {speaker.data.company}
                  </p>
                  <p class="text-gray-500 text-xs mb-3">
                    {speaker.data.category}
                  </p>
                  
                  <!-- Bio truncada -->
                  <p class="text-gray-600 text-sm leading-relaxed line-clamp-2 mb-3">
                    {lang === 'es' ? speaker.data.bioEs.slice(0, 120) + '...' : speaker.data.bioEn.slice(0, 120) + '...'}
                  </p>
                  
                  <!-- CTA -->
                  <div class="flex items-center text-primary-600 hover:text-primary-700 font-medium text-sm transition-colors group/link">
                    {t('speakers.viewProfile')}
                    <svg class="w-4 h-4 ml-1 transform group-hover/link:translate-x-1 transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3"/>
                    </svg>
                  </div>
                </div>
              </a>
            </div>
          ))}
        </div>
      </>
    ) : (
      <div class="text-center py-12">
        <p class="text-gray-600">
          {lang === 'es' ? 'Cargando speakers...' : 'Loading speakers...'}
        </p>
      </div>
    )}
  </div>
</section>

<style>
.line-clamp-2 {
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}
</style>