---
interface Props {
  videoId: string;
  title: string;
  isLCP?: boolean; // Si es la imagen LCP (Largest Contentful Paint)
}

const { videoId, title, isLCP = false } = Astro.props;
---

<div class="video-thumbnail-container relative group cursor-pointer rounded-xl overflow-hidden shadow-xl" data-video-id={videoId} data-title={title}>
  <!-- Thumbnail optimizado único -->
  <img 
    src="/images/video-thumbnail.webp"
    alt={title}
    class="w-full h-full object-cover transition-transform duration-300 group-hover:scale-105"
    loading={isLCP ? "eager" : "lazy"}
    fetchpriority={isLCP ? "high" : "auto"}
    width="600"
    height="338"
    decoding="async"
  />
  
  <!-- Overlay oscuro -->
  <div class="absolute inset-0 bg-black/20 group-hover:bg-black/30 transition-colors duration-300"></div>
  
  <!-- Botón de play -->
  <div class="absolute inset-0 flex items-center justify-center">
    <div class="play-button bg-white/90 backdrop-blur-sm rounded-full p-6 group-hover:bg-white group-hover:scale-110 transition-all duration-300 shadow-2xl">
      <svg class="w-8 h-8 text-primary-600 ml-1" fill="currentColor" viewBox="0 0 24 24">
        <path d="M8 5v14l11-7z"/>
      </svg>
    </div>
  </div>
</div>

<script>
  // Simple video modal for Astro static site
  document.addEventListener('DOMContentLoaded', () => {
    const thumbnails = document.querySelectorAll('.video-thumbnail-container');
    
    thumbnails.forEach(thumbnail => {
      const videoId = thumbnail.dataset.videoId;
      const title = thumbnail.dataset.title;
      
      if (!videoId) return;
      
      thumbnail.addEventListener('click', () => {
        // Create modal
        const modal = document.createElement('div');
        modal.className = 'fixed inset-0 z-50 bg-black/95 flex items-center justify-center p-4';
        
        modal.innerHTML = `
          <button class="close-modal absolute top-4 right-4 text-white hover:text-gray-300" aria-label="Cerrar video">
            <svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"/>
            </svg>
          </button>
          <div class="max-w-6xl w-full">
            <div class="aspect-video bg-black rounded-lg overflow-hidden">
              <iframe 
                src="https://www.youtube.com/embed/${videoId}?autoplay=1&rel=0" 
                class="w-full h-full"
                frameborder="0" 
                allowfullscreen
                allow="autoplay; encrypted-media; picture-in-picture; web-share">
              </iframe>
            </div>
          </div>
        `;
        
        document.body.appendChild(modal);
        document.body.style.overflow = 'hidden';
        
        // Close handlers
        const closeModal = () => {
          document.body.removeChild(modal);
          document.body.style.overflow = '';
        };
        
        modal.querySelector('.close-modal').onclick = closeModal;
        modal.onclick = (e) => e.target === modal && closeModal();
        
        const handleEsc = (e) => {
          if (e.key === 'Escape') {
            closeModal();
            document.removeEventListener('keydown', handleEsc);
          }
        };
        document.addEventListener('keydown', handleEsc);
      });
    });
  });
</script>

<style>
  .play-button {
    box-shadow: 0 25px 50px -12px rgba(0, 0, 0, 0.25);
  }
</style>